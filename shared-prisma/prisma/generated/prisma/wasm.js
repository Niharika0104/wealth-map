
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  email_verified: 'email_verified',
  password: 'password',
  image: 'image',
  phone_number: 'phone_number',
  region: 'region',
  role: 'role',
  mfa_enabled: 'mfa_enabled',
  mfa_method: 'mfa_method',
  mfa_secret: 'mfa_secret',
  last_login: 'last_login',
  created_by: 'created_by',
  created_date: 'created_date',
  modified_by: 'modified_by',
  modified_date: 'modified_date'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  type: 'type',
  provider: 'provider',
  provider_account_id: 'provider_account_id',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  session_token: 'session_token',
  user_id: 'user_id',
  expires: 'expires',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.VerificationTokenScalarFieldEnum = {
  identifier: 'identifier',
  token: 'token',
  expires: 'expires'
};

exports.Prisma.WebAuthnDeviceScalarFieldEnum = {
  credential_id: 'credential_id',
  user_id: 'user_id',
  public_key: 'public_key',
  counter: 'counter',
  device_type: 'device_type',
  backed_up: 'backed_up',
  transports: 'transports',
  friendly_name: 'friendly_name',
  last_used: 'last_used',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.OneTimeCodeScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  code: 'code',
  type: 'type',
  used: 'used',
  expires: 'expires',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.EmployeeScalarFieldEnum = {
  user_id: 'user_id',
  company_id: 'company_id'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  region: 'region',
  created_by: 'created_by',
  created_date: 'created_date',
  modified_by: 'modified_by',
  modified_date: 'modified_date'
};

exports.Prisma.AssetScalarFieldEnum = {
  id: 'id',
  asset_type_id: 'asset_type_id',
  description: 'description',
  region: 'region',
  quantity: 'quantity',
  unit_of_measurement: 'unit_of_measurement',
  unit_value: 'unit_value',
  total_value: 'total_value',
  income_generated: 'income_generated',
  valuation_method: 'valuation_method',
  valuation_date: 'valuation_date',
  source_platform: 'source_platform',
  created_by: 'created_by',
  created_date: 'created_date',
  modified_by: 'modified_by',
  modified_date: 'modified_date'
};

exports.Prisma.CandidateAssetOwnershipScalarFieldEnum = {
  id: 'id',
  asset_id: 'asset_id',
  candidate_id: 'candidate_id',
  ownership_percentage: 'ownership_percentage'
};

exports.Prisma.CandidateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  region: 'region',
  phone_number: 'phone_number',
  email: 'email',
  address: 'address',
  dob: 'dob',
  country_name: 'country_name',
  created_by: 'created_by',
  created_date: 'created_date',
  modified_by: 'modified_by',
  modified_date: 'modified_date'
};

exports.Prisma.LoggingScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  action_type: 'action_type',
  activity_time: 'activity_time',
  details: 'details',
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  created_by: 'created_by',
  created_date: 'created_date',
  modified_by: 'modified_by',
  modified_date: 'modified_date'
};

exports.Prisma.ViewScalarFieldEnum = {
  id: 'id',
  asset_id: 'asset_id',
  viewed_by: 'viewed_by',
  viewed_at: 'viewed_at'
};

exports.Prisma.BookmarkScalarFieldEnum = {
  id: 'id',
  asset_id: 'asset_id',
  bookmarked_by: 'bookmarked_by',
  bookmarked_at: 'bookmarked_at'
};

exports.Prisma.ConstantsScalarFieldEnum = {
  const_id: 'const_id',
  code: 'code',
  description: 'description'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Account: 'Account',
  Session: 'Session',
  VerificationToken: 'VerificationToken',
  WebAuthnDevice: 'WebAuthnDevice',
  OneTimeCode: 'OneTimeCode',
  Employee: 'Employee',
  Company: 'Company',
  Asset: 'Asset',
  CandidateAssetOwnership: 'CandidateAssetOwnership',
  Candidate: 'Candidate',
  Logging: 'Logging',
  View: 'View',
  Bookmark: 'Bookmark',
  Constants: 'Constants'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
